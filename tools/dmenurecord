#!/usr/bin/env sh

killrecording() {
    killall -q ffmpeg; exit
}

screencast() { \
    ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -f alsa -i default \
    -r 30 \
    -c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
    notify-send "Recording" "screencast"
}

video() { ffmpeg \
    -f x11grab \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
    notify-send "Recording" "video"
}

webcamhidef() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    notify-send "Recording" "webcam HD"
}

webcam() { ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
    notify-send "Recording" "webcam"
}

audio() { \
    ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
    notify-send "Recording" "audio"
}

askrecording() { \
    choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select Record:")
    case "$choice" in
        screencast) screencast ;;
        audio) audio ;;
        video) video ;;
        webcam) webcam ;;
        "webcam (hi-def)") webcamhidef ;;
    esac
}

asktoend() { \
    response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] && killrecording
}

#  First check to see if a process is still running
ps cax | grep ffmpeg
if [ $? -eq 0 ]; then
    asktoend
else
    askrecording
fi
